<template>
  <publicPage :tableData="tableData"></publicPage>
</template>
<script>
import api from '@/api/api.js'
import { mapState, mapActions } from 'vuex'
import DealWithData from '@/utils/DealWithData'
import publicPage from '@/pages/publicPage'

export default {
  name: 'saleArea',
  data() {
    return {
      tableData: [{
        head: true,
        busName: '大区',
        dayAdd: '日新增',
        monthAdd: '月累计',
        monthRate: '达成率',
        yearAdd: '年累计',
        yearRate: '达成率',
        count: '统计',
        isCount: false,
        more: 0
      }],
      activeTabNameApi: this.$route.query.pageType //获取当前标签页的aPI接口名称，用于区分存贮数据
    }
  },
  components: {
    publicPage
  },
  mounted() {
    this.$nextTick(() => {
      this.loadPage();
    })
  },
  watch: {
    //根据选择的标签页加载不同的数据
    activeTab: function(newVal) {
      this.initTabInfo(newVal);
    },
    //选择其他时间段时触发
    dateSelect: function(newVal) {
      if (newVal.checkWay == '4') {
        this.initTabInfo(this.activeTab, newVal.checkWay); //监听是否选择的是选择其他时间段，另做处理
      }
    },
    //选择品牌时触发
    myBrandSelect: function(newVal) {
      this.filterBrand();
    },
  },
  methods: {
    ...mapActions(['updateActiveTab', 'updateMyBrandSelect']),
    loadPage() {
      // this.updateActiveTab(1); //进入此页面，默认按组织查看
      this.initTabInfo(this.activeTab); //进入上次浏览的标签页
    },
    initTabInfo(tab, checkWay) {
      console.log(1111);
      // let parmes = {};
      switch (tab) { //1按组织 2按品牌 3按车系
        case 1: //先改变当前标签页的aPI接口名称，再请求数据
          this.activeTabNameApi = this.$route.query.pageType; //接口名称
          let orgParmes = {};
          orgParmes = DealWithData.areaOrgInParame(); //请求的参数，DealWithData中配置
          orgParmes.startTime = this.dateSelect.startTime;
          orgParmes.endTime = this.dateSelect.endTime;
          orgParmes.checkWay = this.dateSelect.checkWay;
          this.getAPI(orgParmes);
          break;
        case 2:
          this.activeTabNameApi = this.$route.query.pageType + '_BRAND';
          let brandParmes = {};
          brandParmes = DealWithData.areaBrandInParame(); //请求的参数，DealWithData中配置
          // if(this.dateSelect.checkWay!=4){brandParmes.brandCode = 'all';}
          if (checkWay == 4) {
            let brandCode = '';
            let codes = [];
            let myBrandSelect = this.myBrandSelect;
            if (myBrandSelect != null) {
              myBrandSelect.forEach((x, index) => {
                codes.push(x.code);
              })
            }else{
              codes=['all'];
            }
            brandCode = codes.join(',');
            brandParmes.brandCode = brandCode;
          }
          brandParmes.startTime = this.dateSelect.startTime;
          brandParmes.endTime = this.dateSelect.endTime;
          brandParmes.checkWay = this.dateSelect.checkWay;
          this.getAPI(brandParmes);
          break;
        case 3:
          this.activeTabNameApi = this.$route.query.pageType + '_CAR';
          let carParmes = {};
          carParmes = DealWithData.areaCarInParame(); //请求的参数，DealWithData中配置
          carParmes.seriesCode = this.myCarSelect.seriesCode;
          carParmes.startTime = this.dateSelect.startTime;
          carParmes.endTime = this.dateSelect.endTime;
          carParmes.checkWay = this.dateSelect.checkWay;
          this.getAPI(carParmes);
          break;
        default:
          break;
      }
    },
    getAPI(parmes) {
      let pageType = this.activeTabNameApi; //利用链接参数指定请求的接口
      console.log(pageType);
      console.log(parmes);
      // debugger
      if (this[pageType] == null || this.dateSelect.checkWay == '4') { //state 如果为null 说明第一次进入，请求后台数据
        api[pageType](parmes).then(res => {
          if (res.status == '0') {
            //选择时间段的不需要存贮数据
            if (this.dateSelect.checkWay != '4') {
              let commitType = this.activeTabNameApi;
              this.$store.commit(commitType, res.data);
            }
            this.dealData(res.data);
          } else {
            this.tableData.splice(1, 10000);
            console.log(res.message);
          }
        })
      } else {
        // debugger
        this.dealData(this[pageType]);
      }
    },
    dealData(res) {
      this.tableData.splice(1, 10000); //初始化数据
      res.forEach((x, index) => {
        DealWithData.dealWithSaleAreaData(x); //处理数据，品牌与车系没有点击事件
        this.tableData.push(x);
      })
    },
    filterBrand() {
      if (this.myBrandSelect != null) {
        this.dealData(this.myBrandSelect);
      }
    }
  },
  computed: {
    //activeTab页签
    ...mapState({
      activeTab: state => state.activeTab,
      dateSelect: state => state.dateSelect,
      myBrandSelect: state => state.myBrandSelect,
      myCarSelect: state => state.myCarSelect,

      SALE_XIANSUO_AREA: state => state.SALE_XIANSUO_AREA,
      SALE_LAIDIAN_AREA: state => state.SALE_LAIDIAN_AREA,
      SALE_YIXIANG_AREA: state => state.SALE_YIXIANG_AREA,
      SALE_DINGDAN_AREA: state => state.SALE_DINGDAN_AREA,
      SALE_KAIPIAO_AREA: state => state.SALE_KAIPIAO_AREA,
      SALE_JIAOCHE_AREA: state => state.SALE_JIAOCHE_AREA,
      SALE_TICHE_AREA: state => state.SALE_TICHE_AREA,
      SALE_TICHEJIN_AREA: state => state.SALE_TICHEJIN_AREA,
      SALE_DINGDANJIN_AREA: state => state.SALE_DINGDANJIN_AREA,
      SALE_KAIPIAOJIN_AREA: state => state.SALE_KAIPIAOJIN_AREA,

      SALE_XIANSUO_AREA_BRAND: state => state.SALE_XIANSUO_AREA_BRAND,
      SALE_LAIDIAN_AREA_BRAND: state => state.SALE_LAIDIAN_AREA_BRAND,
      SALE_YIXIANG_AREA_BRAND: state => state.SALE_YIXIANG_AREA_BRAND,
      SALE_DINGDAN_AREA_BRAND: state => state.SALE_DINGDAN_AREA_BRAND,
      SALE_KAIPIAO_AREA_BRAND: state => state.SALE_KAIPIAO_AREA_BRAND,
      SALE_JIAOCHE_AREA_BRAND: state => state.SALE_JIAOCHE_AREA_BRAND,
      SALE_TICHE_AREA_BRAND: state => state.SALE_TICHE_AREA_BRAND,
      SALE_TICHEJIN_AREA_BRAND: state => state.SALE_TICHEJIN_AREA_BRAND,
      SALE_DINGDANJIN_AREA_BRAND: state => state.SALE_DINGDANJIN_AREA_BRAND,
      SALE_KAIPIAOJIN_AREA_BRAND: state => state.SALE_KAIPIAOJIN_AREA_BRAND,

      SALE_XIANSUO_AREA_CAR: state => state.SALE_XIANSUO_AREA_CAR,
      SALE_LAIDIAN_AREA_CAR: state => state.SALE_LAIDIAN_AREA_CAR,
      SALE_YIXIANG_AREA_CAR: state => state.SALE_YIXIANG_AREA_CAR,
      SALE_DINGDAN_AREA_CAR: state => state.SALE_DINGDAN_AREA_CAR,
      SALE_KAIPIAO_AREA_CAR: state => state.SALE_KAIPIAO_AREA_CAR,
      SALE_JIAOCHE_AREA_CAR: state => state.SALE_JIAOCHE_AREA_CAR,
      SALE_TICHE_AREA_CAR: state => state.SALE_TICHE_AREA_CAR,
      SALE_TICHEJIN_AREA_CAR: state => state.SALE_TICHEJIN_AREA_CAR,
      SALE_DINGDANJIN_AREA_CAR: state => state.SALE_DINGDANJIN_AREA_CAR,
      SALE_KAIPIAOJIN_AREA_CAR: state => state.SALE_KAIPIAOJIN_AREA_CAR,

    }),
    // //增加区域内链接属性
    // computedTableData() {
    //   let tableData = this.tableData;
    //   tableData.forEach((x, index) => {
    //     x.link = './saleLittleArea';
    //     x.pageType = this.$route.query.pageType;
    //   })
    //   return tableData
    // }
  }
}

</script>
