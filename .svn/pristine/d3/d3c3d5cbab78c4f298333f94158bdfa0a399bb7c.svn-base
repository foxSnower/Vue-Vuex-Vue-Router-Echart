<template>
  <transition name="slide-fade">
    <div class="slide" v-if="myBrandSelect.show">
      <div class="select-mask" @click.preventDefault @click="close"></div>
      <div class="select">
        <div class="select-header">
          <div class="left" @click.preventDefault @click="close">取消</div>
          <div class="center">
            <span>选择查看品牌({{selectedLength}}/{{list.length}})</span>
          </div>
          <div class="right" @click="onOk">确定</div>
        </div>
        <div class="select-content">
          <div class="items" v-for="(item,index) in list">
            <span :data-index="index" @click="setListCheck(index)" :class="{ active: item.check==true ,'auto-font':getStrLeng(item.label)}">
              {{ item.label }}
              </span>
          </div>
        </div>
      </div>
    </div>
  </transition>
</template>
<script>
import { mapState, mapActions } from 'vuex'
import PublicMethods from '@/utils/PublicMethods'
export default {
  name: 'MyBrandSelect',
  data() {
    return {
      itemSelected: {},
      list: [
        { check: false, label: '爱上大声大声' },
        { check: false, label: '2' },
        { check: false, label: '3' },
        { check: false, label: '4' },
        { check: false, label: '5' },
        { check: false, label: '6' },
        { check: false, label: '7' },
        { check: false, label: '8' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' },
        { check: false, label: '9' }
      ],
      selectedLength: 0,
    }
  },
  computed: {
    ...mapState({
      myBrandSelect: state => state.myBrandSelect,
    }),
  },
  methods: {
    ...mapActions(['updateMyBrandSelect']),
    close() {
          this.list.forEach((y,index)=>{
           y.check=false;
          })
      this.selectedLength=0;
      this.updateMyBrandSelect({
        show: false,
        values: []
      })
    },
    setListCheck: function(idx) {
      const check = this.list[idx].check;
      this.list[idx].check = check === true ? false : true;
      let length = 0;
      this.list.forEach((y, index) => {
        if (y.check == true) {
          length++;
        }
      });
      this.selectedLength = length;
    },
    onOk() {
      let selectedBrand = [];
      this.list.forEach((y, index) => {
        if (y.check == true) {
          selectedBrand.push(y.label)
        }
      })
      this.updateMyBrandSelect({
        show: false,
        values: selectedBrand
      })
      console.log(selectedBrand);
    },
    getStrLeng(str) {
      //数据长度与设置的长度比较
      if (str != null) {
        if (PublicMethods.getStrLeng(str) >= PublicMethods.setSelectMaxLength) {
          return true
        } else {
          return false
        }
      }
    }
  }
}

</script>
<style lang="less" scoped="scoped">
@import '../styles/var.less';

.slide {
  z-index: 100;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  .select-mask {
    z-index: 101;
    background-color: black;
    opacity: 0.5;
    position: absolute;
    /*bottom: 0;*/
    height: 100%;
    width: 100%;
  }
  .select {
    z-index: 102;
    position: absolute;
    bottom: 0;
    height: 40%;
    width: 100%;
    .select-header {
      height: @normalHeight;
      line-height: @normalHeight;
      position: relative;
      font-size: @normalSize;
      color: @themeColor;
      background-color: #fff;
      text-align: center;
      .left {
        position: absolute;
        width: 70px;
        top: 0;
        left: 0;
      }
      .center {
        color: #000;
      }
      .right {
        position: absolute;
        right: 0;
        top: 0;
        width: 70px;
      }
    }
    .select-header:before {
      .setBottomLine()
    }
    .select-content {
      height: 83%;
      background-color: #fff;
      border-bottom: 1px solid @borderColor;
      overflow: auto;
      .items {
        width: 25%;
        height: 20%;
        /*font-size:@normalSize;*/
        text-align: center;
        float: left;
        span {
          width: 80%;
          height: 70%;
          overflow: hidden;
          margin-top: 5px;
          padding-top: 5px;
          display: inline-block;
          border: 1px solid @borderColor;
          border-radius: 5px
        }
        .active {
          border: 1px solid #65BCFA;
        }
      }
    }
  }
}

.slide-fade-enter-active {
  transition: all .3s ease;
}

.slide-fade-leave-active {
  transition: all .3s cubic-bezier(1.0, 0.5, 0.8, 1.0);
}

.slide-fade-enter,
.slide-fade-leave-to
/* .slide-fade-leave-active for below version 2.1.8 */

{
  transform: translateY(10px);
  opacity: 0;
}

</style>
