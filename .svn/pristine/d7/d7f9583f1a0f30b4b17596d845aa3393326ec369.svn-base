<template>
  <div class="report">
    <div class="fixed-box">
      <div class="fixed" id="FixedObj">
        <div class="change-tab">
          <div class="f-flex tab">
            <div class="f-item" @click="active=1"><span :class="{active:active==1}">按组织</span></div>
            <div class="f-item" @click="active=2"><span :class="{active:active==2}">按品牌</span></div>
            <div class="f-item" @click="active=3"><span :class="{active:active==3}">按车系</span></div>
          </div>
        </div>
        <div class="select">
          <!--从全局中拿出：dateselect.updateTimeSelect-->
          <span v-on:click="updateShowDateSelect(true)" :class="{'auto-font':getStrLeng(dateSelect.checkWayName)}">{{dateSelect.checkWayName}}<i class="iconfont icon-sanjiaoxing"></i></span>
          <span v-if="active==2" @click="showMyBrandSelect" :class="{'auto-font':getStrLeng(dateSelect.checkWayName)}">品牌<i class="iconfont icon-sanjiaoxing"></i></span>
          <span v-if="active==3" @click="showMyCarSelect" :class="{'auto-font':getStrLeng(dateSelect.checkWayName)}">车系<i class="iconfont icon-sanjiaoxing"></i></span>
        </div>
        <Echart :updateOption="updateOption"></Echart>
      </div>
    </div>
    <MyTable :tableData="computedTableData"></MyTable>
    <SelectDate></SelectDate>
    <MyBrandSelect></MyBrandSelect>
    <MyCarSelect></MyCarSelect>
  </div>
</template>
<script>
import { mapState, mapActions } from 'vuex'
// import PublicSetEChartVar from '@/utils/PublicSetEChartVar'
import PublicMethods from '@/utils/PublicMethods'
import Echart from '@/components/Echart'
import MyTable from '@/components/MyTable'
import SelectDate from '@/components/SelectDate'
import MyBrandSelect from '@/components/MyBrandSelect'
import MyCarSelect from '@/components/MyCarSelect'
export default {
  name: 'publicPage',
  data() {
    return {
      active: 1,
      updateOption: {
        XData: [],
        YDataAdd: [],
        YDataRate: [],
        YDataTongbi: [],
        YDataHuanbi: [],
        legend: [], // 图例名称
      }
    }
  },
  props: ['tableData'],
  components: {
    Echart,
    MyTable,
    SelectDate,
    MyBrandSelect,
    MyCarSelect
  },
  watch: {
    XData(newVal) {
      this.updateOption.XData = newVal;
    },
    YData(newVal) {
      this.updateOption.YDataAdd = newVal.add;
      this.updateOption.YDataRate = newVal.rate;
      this.updateOption.YDataTongbi = newVal.tongbi;
      this.updateOption.YDataHuanbi = newVal.huanbi;
      this.updateOption.legend = newVal.legend;// 图例名称
    }
  },
  mounted() {
    this.$nextTick(() => {
      this.loadPage();
    })
  },
  methods: {
    ...mapActions(['updateShowDateSelect','updateDateSelect', 'updateMyBrandSelect', 'updateMyCarSelect']),
    loadPage() {
      //设置图表浮动高度
      let obj = document.getElementById('FixedObj');
      let obj2 = document.getElementsByClassName('fixed-box')[0];
      obj2.style.height = obj.offsetHeight + 'px';
    },
    showMyBrandSelect() {
      this.updateMyBrandSelect({
        show: true,
        values: []
      })
    },
    showMyCarSelect() {
      this.updateMyCarSelect({
        show: true,
        values: []
      })
    },
    // showDateSelect() {
    //   //改变显示状态，其他值保持不变
    //   this.updateShowDateSelect(true);
    // },
    getStrLeng(str) {
      //数据长度与字符串最大长度比较
      if (PublicMethods.getStrLeng(str) >= PublicMethods.setScalMaxLength) {
        return true
      } else {
        return false
      }
    }
  },
  computed: {
    ...mapState({
      dateSelect: state => state.dateSelect,
    }),
    dateSelectType() { //1、日新增2、月累计3、年累计4、其他时间段
      let checkWay = 0;
      switch (this.dateSelect.checkWayName) {
        case '日新增':
          checkWay = 1;
          break;
        case '月累计':
          checkWay = 2;
          break;
        case '年累计':
          checkWay = 3;
          break;
        case '其他时间段':
          checkWay = 4;
          break;
        default:
          break;
      }
      return checkWay
    },
    //X轴
    XData() {
      let XData = [];
      if (this.tableData != null) {
        this.tableData.forEach((x, index) => {
          if (index >= 1) {
            // console.log(x.busName)
            XData.push(x.busName);
          }
        })
        return XData
      }
    },
    YData() {
      let add = [];
      let rate = [];
      let tongbi = [];
      let huanbi = [];
      let legend = [];
      if (this.tableData != null) {
        this.tableData.forEach((x, index) => {
          if (index >= 1) {
            // console.log(x.busName) 
            switch (this.dateSelectType) { //1、日新增2、月累计3、年累计4、其他时间段
              case 1: //日新增只有数量
                add.push(x.dayAdd);
                legend = ['日新增'];
                // add.push(x.dayAdd);
                // add.push(x.dayAdd);
                break;
              case 2: //月累计有数量、达成率、同比、环比
                add.push(x.monthAdd);
                rate.push(x.monthRate);
                tongbi.push(x.tongbi);
                huanbi.push(x.huanbi);
                legend = ['月累计', '达成率', '同比', '环比'];
                break;
              case 3: //年累计有数量、达成率
                add.push(x.yearAdd);
                rate.push(x.yearRate);
                legend = ['年累计', '达成率'];
                break;
              case 4: //其他时间段只有数量
                add.push(x.count);
                legend = ['数量'];
                break;
              default:
                break;
            }
          }
        })
      }
      return {
        add,
        rate,
        tongbi,
        huanbi,
        legend
      }
    },
    //增加区域内链接属性
    computedTableData() {
      let tableData = this.tableData;
      tableData.forEach((x, index) => {
        x.link = './saleLowerArea';
        x.saleType = x.busType;
      })
      return tableData
    }
  }
}

</script>
<!-- Add "scoped" attribute to limit CSS to this component only -->
<style lang="less" scoped>
@import '../styles/var';
.fixed {
  position: fixed;
  width: 100%;
  top: 50px;
  z-index: 1;
  background: #fff;
  .change-tab {
    background-color: @while;
    text-align: center;
    height: 44px;
    line-height: 44px;
    width: 100%;
    border-bottom: 1px solid @borderColor;
    .tab {
      margin: 0 35px;
      span {
        display: inline-block;
        height: 100%;
        &.active {
          border-bottom: 2px solid @themeColor;
          color: @themeColor;
        }
      }
    }
  }
}

.select {
  margin: 15px;
  span {
    border: 1px solid @borderColor;
    display: inline-block;
    line-height: 35px;
    text-indent: 10px;
    border-radius: 44px;
    .icon-sanjiaoxing {
      padding-left: 10px;
      padding-right: 10px;
    }
    +span {
      margin-left: 10px;
    }
  }
}

.auto-font {
  font-size: @tinySize;
}

</style>
